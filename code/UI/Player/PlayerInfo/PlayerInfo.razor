@using Sandbox;
@using TTT;
@using Sandbox.UI;
@namespace TTT.UI
@attribute [StyleSheet("/UI/Player/PlayerInfo/PlayerInfo.scss")]

<root class="opacity-heavy text-shadow">
    <div @ref="RoleContainer" class="role-container">
        <text @ref="Role" />
    </div>

    <div @ref="HealthContainer" class="health-container background-color-gradient">
        <text @ref="Health" />
    </div>
</root>

@code
{
    private Panel RoleContainer { get; set; }
    private Label Role { get; set; }

    private Panel HealthContainer { get; set; }
    private Label Health { get; set; }

    public override void Tick()
    {
        if (Local.Pawn is not TTT.Player player)
            return;

        this.Enabled(player.CurrentPlayer.IsValid() && player.CurrentPlayer.IsAlive());
        if (!this.IsEnabled())
            return;

        if (player.CurrentPlayer.Role is NoneRole)
        {
            RoleContainer.Enabled(false);

            HealthContainer.Style.BorderTopLeftRadius = 4;
            HealthContainer.Style.BorderBottomLeftRadius = 4;
        }
        else
        {
            RoleContainer.Enabled(true);
            RoleContainer.Style.BackgroundColor = player.CurrentPlayer.Role.Color;
            Role.Text = player.CurrentPlayer.Role.Title;

            HealthContainer.Style.BorderTopLeftRadius = 0;
            HealthContainer.Style.BorderBottomLeftRadius = 0;
        }

        Health.Text = $"âœš {player.CurrentPlayer.Health.CeilToInt()}";
    }

    [GameEvent.Player.TookDamage]
    private void OnHit(TTT.Player player)
    {
        if (!this.IsEnabled())
            return;

        HealthContainer.AddClass("hit");
        Utils.DelayAction(0.2f, () => { HealthContainer.RemoveClass("hit"); });
    }
}
