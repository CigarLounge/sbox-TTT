@using Sandbox;
@using System;

@namespace TTT.UI

<root>
	<button icon="leaderboard" @onclick=@GoToRoundSummaryPage>Round Summary</button>
	<br />
	<button icon="videocam" @onclick=@ToggleForcedSpectating>Force Spectator Mode - @(Spectating.IsForced ? "Enabled" : "Disabled")</button>
	<br />
	<button icon="how_to_vote" @onclick=@RockTheVote
			class="@(Game.LocalClient.GetValue<bool>( Strings.HasRockedTheVote ) ? "inactive" : "")">
		Rock The Vote
	</button>
	<br />
	<button icon="adjust" @onclick=@GoToCrosshairPage>Crosshair Customization</button>
	<br />
	<button icon="keyboard" @onclick=@GoToKeyBindingsPage>Keybindings</button>
	<br />
</root>

@code
{
	public void GoToRoundSummaryPage()
	{
		GeneralMenu.Instance.AddPage(new RoundSummaryPage());
	}

	public void GoToKeyBindingsPage()
	{
		GeneralMenu.Instance.AddPage(new KeyBindingsPage());
	}

	public void GoToCrosshairPage()
	{
		GeneralMenu.Instance.AddPage(new CrosshairPage());
	}

	public void RockTheVote()
	{
		TTT.GameManager.RockTheVote();
	}

	public void ToggleForcedSpectating()
	{
		Spectating.IsForced = !Spectating.IsForced;
	}

	protected override int BuildHash()
	{
		return HashCode.Combine(Spectating.IsForced, Game.LocalClient.GetValue<bool>(Strings.HasRockedTheVote));
	}
}

<style>
	HomePage {
		flex-direction: column;
		overflow: scroll;
		width: 100%;
	}
</style>